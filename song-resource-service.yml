spring:
  application:
    name: song-resource-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://song-resource-service-db:3306/song_resource_database
    username: root
    password: pass123
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: create-drop
      defer-datasource-initialization: true
    show-sql: true
  servlet:
    multipart:
      max-file-size: 10MB
  kafka:
    topic-name: resource
    bootstrap-servers: kafka:29092
    group-id: group_id

localstack:
  url: http://localstack:4566/
  secretKey: KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK
  accessKey: AAAAAAAAAAAAAAAAAAAA
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka
client:
  song-storage-service:
    url: http://song-storage-service:8080
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
  instances:
    storageCircuitBreaker:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 3
      waitDurationInOpenState: 20s
      failureRateThreshold: 50
      eventConsumerBufferSize: 50
management:
  security:
    enabled: false
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: "ALWAYS"
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
logging:
  file.name: logs/song-resource-service.log
      prometheus:
        enabled: true
